apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: app-b
  labels:
    app: app-b
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-b
  template:
    metadata:
      labels:
        app: app-b
    spec:
      containers:
      - name: app-b
        # Paramètre pour image:
        # Pour Google cloud : eu.gcr.io/osoneskub/helloworld
        # Pour Azure : helloworldosones.azurecr.io/helloworld
        # Pour Amazon : bientôt !
        image: 409755898317.dkr.ecr.us-east-1.amazonaws.com/app-b

---
kind: Service
apiVersion: v1
metadata:
  name: app-b
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "3600"
    service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: '*'
    #service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-1:1234567:certificate/1234294-232-4f89-bca8
    #service.beta.kubernetes.io/aws-load-balancer-ssl-ports: https
    #service.beta.kubernetes.io/aws-load-balancer-type: "clb"
    #service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:REDACTED"
    #service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
spec:
  externalTrafficPolicy: Cluster
  type : LoadBalancer
  selector:
    app: app-b
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 8082
  #- name: https
  #  protocol: TCP
  #  port: 443
  #  targetPort: 80
status:
  loadBalancer:
    ingress:
    - hostname: a9a32344fc9ee11e8b81c0e01c533d56-59573711.us-east-1.elb.amazonaws.com
